/*
 * ActiveProcessesWin.java
 *
 * Created on May 12, 2004, 12:26 AM
 */

package xflow.client.manager;

import xflow.client.XFlowAdminUI;
import xflow.common.WorkflowState;

/**
 *
 * @author  kosta
 */
public class ActiveProcessesWin extends javax.swing.JInternalFrame {

    XFlowAdminUI xFlowAdminUI;
    private int wfId = -1;

    /** Creates new form ActiveProcessesWin */
    public ActiveProcessesWin() {
        initComponents();
    }

  public ActiveProcessesWin(XFlowAdminUI xFlowAdminUI) {
    this();
    this.xFlowAdminUI = xFlowAdminUI;
  }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jToolBar1 = new javax.swing.JToolBar();
        refreshBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        activeProcTable = new javax.swing.JTable();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Active Processes");
        jToolBar1.setFloatable(false);
        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/xflow/client/manager/icon/refresh.gif")));
        refreshBtn.setMnemonic('r');
        refreshBtn.setText("refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActiveProcList(evt);
            }
        });

        jToolBar1.add(refreshBtn);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        activeProcTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(activeProcTable);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void refreshActiveProcList(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActiveProcList
      refreshList();
    }//GEN-LAST:event_refreshActiveProcList

  private void refreshList() {
    if( wfId == -1) return;
    try {
      WorkflowState state = xFlowAdminUI.getWorkflowState( wfId );
      this.setTitle( "Workflow::" + state.getWorkflowName()  + "::" + state.getIsActive() );
      activeProcTable.setModel( Utilities.createTableModel( state.getActiveProcesses() ));
    } catch ( Exception e) {
      e.printStackTrace();
    }
  }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable activeProcTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton refreshBtn;
    // End of variables declaration//GEN-END:variables

  public void showProcessesFoWfID(int selectedWfID) {
     this.wfId = selectedWfID;
    refreshList();
  }

}
