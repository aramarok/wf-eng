<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="WorkflowP">

  <typeAlias alias="WorkflowP" type="wf.server.controller.WorkflowP"/>
  <typeAlias alias="WorkflowId" type="wf.model.WorkflowId" />
  <typeAlias alias="WorkflowModel" type="wf.model.WorkflowModel"/>
  <typeAlias alias="WorkflowState" type="wf.model.WorkflowState"/>



  <resultMap id="WorkflowModel-map" class="WorkflowModel">
    <result property="name" column="name"/>
    <result property="version" column="version"/>
    <result property="description" column="description"/>
  </resultMap>

  <resultMap id="WorkflowState-map" class="WorkflowState">
    <result property="id" column="workflowId"/>
    <result property="workflowName" column="name"/>
    <result property="version" column="version"/>
    <result property="active" column="isActive"/>
    <result property="state" column="status"/>
    <result property="initiator" column="name"/>
    <result property="timeStarted" column="timeStarted" javaType="java.util.Date" />
    <result property="timeEnded" column="timeEnded"  javaType="java.util.Date"/>
  </resultMap>

  <insert id="insertWorkflow" parameterClass="java.util.Map">
    insert into workflow ( gid, initiator, isactive , timestarted, timeended , status , parentworkflowid )
     values ( #graphId# , #initiator# , 'true', #timeStartedSql#, null, 'RUNNING' , #pWfId# )
    <selectKey resultClass="int" keyProperty="id" >
          CALL IDENTITY()
     </selectKey>
  </insert>

  <select id="selectWorkflowGid" resultClass="integer" >
    select gid from workflow where workflowId = #value#;
  </select>

  <select id="activeWorkflowIDs" resultClass="integer" >
    select workflowId from workflow where isActive = true
  </select>

  <select id="suspendedWorkflowIDs" resultClass="integer" >
    select workflowId from workflow where isActive = true and status = 'SUSPENDED'
  </select>

  <select id="allWorkflowIDs"   resultClass="integer" >
    select workflowId from workflow
  </select>

  <select id="getWorkflowIDsByName"  resultClass="integer" parameterClass="string">
    select w.workflowId from workflow w, graph g where w.gid = g.gid and g.name = #value#
  </select>

  <select id="getModels" resultMap="WorkflowModel-map">
    select * from graph order by name
  </select>

  <update id="abortWorkflow" >
    update workflow set isActive = false, timeEnded = #timeEnded#,
           status = 'ABORTED' where workflowId = #workflowId#
  </update>

  <update id="suspendWorkflow" parameterClass="int">
    update workflow set status = 'SUSPENDED' where workflowid = #value#
  </update>

  <update id="resumeWorkflow"  parameterClass="int">
    update workflow set status = 'RUNNING' where workflowid = #value#
  </update>

  <select id="getVariable" resultClass="string">
    select value from workflowvars where workflowId = #workflowId#  and name = #name#
  </select>

  <update id="setCompleted">
    update workflow set isActive = 'false', timeEnded = #timeEnded#,
             status = 'COMPLETED' where workflowId = #workflowId#
  </update>
  
  <select id="isCompleted"  parameterClass="int" resultClass="int">
    select workflowId from workflow where status = 'COMPLETED' and workflowId = #value#
  </select>

  <delete id="deleteWorkflowVar" >
    delete from workflowvars where workflowId = #workflowId# and name = #name#
  </delete>

  <insert id="insertWorkflowVar">
    insert into workflowvars( workflowId, name, value )  values ( #workflowId#, #name#, #varVal# )
  </insert>

  <select id="selectWorkwlowVariables" resultClass="wf.server.controller.WorkflowVariable" >
    select name, value, workflowid from workflowvars where workflowid = #value#
  </select>

  <select id="getWorkflowState" resultMap="WorkflowState-map">
    select
     w.workflowId,
     g.name,
     w.isActive,
     w.status ,
     w.timeStarted,
     w.timeEnded,
     g.version as version
     from workflow w, graph g where w.workflowId = #value#
         and w.gid = g.gid
  </select>

  <select id="selectProcessStateRecords" resultClass="wf.server.controller.ProcessStateRec">
     select * from inbox where workflowid = #value#
  </select>

  <insert id="insertOrtab" >
    insert into ortab ( workflowId, nodeId) values (  #workflowId#, #nodeId# )
  </insert>

  <select id="selectOrtab">
    select workflowId
      from ortab
      where workflowId = #workflowId#
      and nodeId = #nodeId#
  </select>

  <select id="selectNodesWithTimeout" resultClass="java.util.HashMap" >
    select n.nid, n.name, p.value
     from node n, nodeprops p
     where  n.nid = p.nid and p.name = 'timeoutMinutes'
  </select>

  <select id="selectTimeoutHandler" resultClass="string">
    select p.value
    from node n, nodeprops p
     where n.nid = p.nid
          and n.nid = #value#
          and p.name = 'timeoutHandler'
  </select>

  <insert id="insertProcStackRecord">
    insert into procstack ( workflowId, cgid, cNodeId, endNodeId)
     values ( #workflowId# ,#cGid#, #containerNodeId# ,#endNodeId# )
  </insert>

   <select id="selectProcStackRecord" resultClass="java.util.HashMap" >
    select  workflowId as workflowId, cgid as cGid, cNodeId as cNodeId, endNodeId as endNodeId
      from procstack where endnodeid = #endNodeId#
          and workflowid = #workflowId#
  </select>

  <delete id="deleteProcStackRecord">
    delete from procstack where endnodeid = #endNodeId#
          and workflowid = #workflowId#
  </delete>

</sqlMap>